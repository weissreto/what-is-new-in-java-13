package whatisnewin.java.nio.file;

import java.nio.file.FileSystems;
import java.nio.file.FileSystem;
import java.nio.file.Path;
import java.util.Map;
import java.io.IOException;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link FileSystems}
 * that were newly introduced in Java version 13.<br>
 *
 * {@link FileSystems} is an old class but has new fields, constructors or methods.
 * @since 1.7
 * @see FileSystems
 */
public final class WhatIsNewInFileSystems
{
  /**
   * Example call to new method {@link FileSystems#newFileSystem(Path, Map)}.
   * @since 13
   * @see FileSystems#newFileSystem(Path, Map)
   */
  public static FileSystem newFileSystem(Path path, Map<String, ?> env) throws IOException
  {
    FileSystem result = FileSystems.newFileSystem(path, env);
    return result;
  }

  /**
   * Example call to new method {@link FileSystems#newFileSystem(Path)}.
   * @since 13
   * @see FileSystems#newFileSystem(Path)
   */
  public static FileSystem newFileSystem(Path path) throws IOException
  {
    FileSystem result = FileSystems.newFileSystem(path);
    return result;
  }

  /**
   * Example call to new method {@link FileSystems#newFileSystem(Path, Map, ClassLoader)}.
   * @since 13
   * @see FileSystems#newFileSystem(Path, Map, ClassLoader)
   */
  public static FileSystem newFileSystem(Path path, Map<String, ?> env, ClassLoader loader) throws IOException
  {
    FileSystem result = FileSystems.newFileSystem(path, env, loader);
    return result;
  }

}
