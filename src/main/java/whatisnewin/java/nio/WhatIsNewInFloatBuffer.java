package whatisnewin.java.nio;

import java.nio.FloatBuffer;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link FloatBuffer}
 * that were newly introduced in Java version 13.<br>
 *
 * {@link FloatBuffer} is an old class but has new fields, constructors or methods.
 * @since 1.4
 * @see FloatBuffer
 */
public final class WhatIsNewInFloatBuffer
{
  /**
   * Example call to new method {@link FloatBuffer#slice(int, int)}.
   * @since 13
   * @see FloatBuffer#slice(int, int)
   */
  public FloatBuffer slice(int index, int length)
  {
    FloatBuffer testee = $$$();

    FloatBuffer result = testee.slice(index, length);
    return result;
  }

  /**
   * Example call to new method {@link FloatBuffer#get(int, float[], int, int)}.
   * @since 13
   * @see FloatBuffer#get(int, float[], int, int)
   */
  public FloatBuffer get(int index, float[] dst, int offset, int length)
  {
    FloatBuffer testee = $$$();

    FloatBuffer result = testee.get(index, dst, offset, length);
    return result;
  }

  /**
   * Example call to new method {@link FloatBuffer#get(int, float[])}.
   * @since 13
   * @see FloatBuffer#get(int, float[])
   */
  public FloatBuffer get(int index, float[] dst)
  {
    FloatBuffer testee = $$$();

    FloatBuffer result = testee.get(index, dst);
    return result;
  }

  /**
   * Example call to new method {@link FloatBuffer#put(int, float[], int, int)}.
   * @since 13
   * @see FloatBuffer#put(int, float[], int, int)
   */
  public FloatBuffer put(int index, float[] src, int offset, int length)
  {
    FloatBuffer testee = $$$();

    FloatBuffer result = testee.put(index, src, offset, length);
    return result;
  }

  /**
   * Example call to new method {@link FloatBuffer#put(int, float[])}.
   * @since 13
   * @see FloatBuffer#put(int, float[])
   */
  public FloatBuffer put(int index, float[] src)
  {
    FloatBuffer testee = $$$();

    FloatBuffer result = testee.put(index, src);
    return result;
  }

  private FloatBuffer $$$()
  {
    return null;
  }
}
